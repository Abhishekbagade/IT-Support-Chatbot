# IT Support Chatbot on AWS

## Project Overview

The IT Support Chatbot is a **serverless, AI-powered support assistant** built on AWS. It allows employees to quickly raise tickets, troubleshoot issues, and escalate requests in real time. The solution is lightweight, scalable, and designed to reduce manual support overhead.

---

## Features

* Interactive **chat interface** with option buttons for guided responses.
* **AWS Lex** for natural language understanding.
* **Lambda functions** for backend processing.
* **DynamoDB** for storing user queries and tickets.
* **SES (Simple Email Service)** for live ticket notifications.
* **S3 static website hosting** for a simple and responsive chatbot frontend.
* Escalation flow for unresolved queries.

---

## Architecture

graph TD
    A[User] -->|Chat Request| B[S3 Frontend]
    B --> C[Amazon Lex]
    C --> D[Lambda Backend]
    D --> E[DynamoDB - Ticket Storage]
    D --> F[SES - Email Notifications]

---

## Tech Stack

* **AWS Services**: Lex, Lambda, DynamoDB, S3, SES, IAM
* **Frontend**: HTML, CSS, JavaScript
* **Backend**: Node.js (serverless functions)
* **Infrastructure**: AWS Console (Free Tier)

---

## Project Structure

```
IT-Support-Chatbot/
│── frontend/
│   ├── index.html
│   ├── style.css
│   └── app.js
│
│── backend/
│   ├── lambda_functions/
│   └── api_gateway_config.json
│
└── README.md
```

---

## Deployment Steps

1. **Clone repo** → `git clone https://github.com/Abhishekbagade/IT-Support-Chatbot.git`
2. Deploy backend:

   * Create Lambda functions from `/backend/lambda_functions/`.
   * Set up API Gateway for integration.
   * Configure DynamoDB table for ticket storage.
3. Frontend:

   * Upload `/frontend` files to an S3 bucket (static hosting enabled).
   * Update API Gateway endpoint in `app.js`.
4. Email Notifications:

   * Verify SES email identity.
   * Update SES config in Lambda.

---

## Outcomes

* Reduced ticket resolution time with automated chatbot support.
* Demonstrated integration of multiple AWS services into a cohesive serverless application.
* Scalable design that can be extended with more intents, FAQs, and ticket workflows.

---

## Author

**Abhishek Bagade**


